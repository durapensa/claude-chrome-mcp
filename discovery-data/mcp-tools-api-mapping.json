{
  "metadata": {
    "discoveryDate": "2025-05-31T17:00:00Z",
    "version": "2.3.0",
    "description": "Mapping of claude-chrome-mcp tools to their underlying Claude.ai API calls",
    "toolsAnalyzed": 25,
    "apiEndpointsUsed": 8
  },
  "toolMappings": {
    "spawn_claude_dot_ai_tab": {
      "description": "Create a new Claude.ai tab",
      "implementation": "chrome_extension",
      "apiCalls": [
        {
          "method": "chrome.tabs.create",
          "url": "https://claude.ai",
          "purpose": "Creates browser tab pointing to Claude.ai"
        }
      ],
      "networkRequests": [
        {
          "url": "https://claude.ai",
          "method": "GET",
          "purpose": "Load Claude.ai interface"
        }
      ]
    },
    "get_claude_dot_ai_tabs": {
      "description": "Get list of all currently open Claude.ai tabs",
      "implementation": "chrome_extension",
      "apiCalls": [
        {
          "method": "chrome.tabs.query",
          "filter": "url: 'https://claude.ai/*'",
          "purpose": "Find all Claude.ai tabs"
        }
      ],
      "networkRequests": []
    },
    "send_message_to_claude_dot_ai_tab": {
      "description": "Send a message to a specific Claude tab",
      "implementation": "dom_manipulation",
      "apiCalls": [
        {
          "method": "chrome.debugger.executeScript",
          "purpose": "Inject DOM manipulation script"
        }
      ],
      "domManipulation": {
        "selector": "div[contenteditable=\"true\"]",
        "action": "Set textContent and trigger input event",
        "submitSelector": "button[aria-label*=\"Send\"], button:has(svg[stroke])"
      },
      "networkRequests": [
        {
          "url": "https://claude.ai/api/organizations/{org_id}/chat_conversations/{conversation_id}/chat_message_warning",
          "method": "POST",
          "purpose": "Pre-message validation",
          "triggeredBy": "DOM button click"
        },
        {
          "url": "https://claude.ai/api/organizations/{org_id}/chat_conversations/{conversation_id}/completion",
          "method": "POST",
          "purpose": "Send message and receive streaming response",
          "triggeredBy": "DOM button click"
        }
      ]
    },
    "get_claude_dot_ai_response": {
      "description": "Get the latest response from a Claude tab",
      "implementation": "dom_scraping",
      "apiCalls": [
        {
          "method": "chrome.debugger.executeScript",
          "purpose": "Extract messages from DOM"
        }
      ],
      "domScraping": {
        "messageSelector": ".font-claude-message",
        "completionIndicators": [
          "button[aria-label*=\"Stop\"]",
          "button[aria-expanded]",
          "[data-state=\"streaming\"]"
        ]
      },
      "networkRequests": []
    },
    "get_claude_conversations": {
      "description": "Get list of recent Claude conversations from API",
      "implementation": "api_proxy",
      "apiCalls": [
        {
          "method": "chrome.debugger.executeScript",
          "purpose": "Execute API call from authenticated context"
        }
      ],
      "networkRequests": [
        {
          "url": "https://claude.ai/api/organizations/{org_id}/chat_conversations?offset=0&limit=30",
          "method": "GET",
          "purpose": "Fetch conversation list from Claude.ai API",
          "authentication": "Uses existing session cookies"
        }
      ]
    },
    "search_claude_conversations": {
      "description": "Search and filter Claude conversations",
      "implementation": "api_proxy_with_filtering",
      "apiCalls": [
        {
          "method": "chrome.debugger.executeScript",
          "purpose": "Execute API call and apply client-side filtering"
        }
      ],
      "networkRequests": [
        {
          "url": "https://claude.ai/api/organizations/{org_id}/chat_conversations?offset=0&limit=30",
          "method": "GET",
          "purpose": "Fetch conversations then filter locally"
        }
      ],
      "filtering": {
        "titleSearch": "Client-side regex matching",
        "dateRanges": "Client-side date filtering",
        "messageCount": "Client-side numeric filtering"
      }
    },
    "open_claude_dot_ai_conversation_tab": {
      "description": "Open a specific Claude conversation in a new tab",
      "implementation": "chrome_extension",
      "apiCalls": [
        {
          "method": "chrome.tabs.create",
          "url": "https://claude.ai/chat/{conversationId}",
          "purpose": "Open specific conversation"
        }
      ],
      "networkRequests": [
        {
          "url": "https://claude.ai/chat/{conversationId}",
          "method": "GET",
          "purpose": "Load conversation interface"
        }
      ]
    },
    "delete_claude_conversation": {
      "description": "Delete a conversation from Claude.ai",
      "implementation": "api_proxy",
      "apiCalls": [
        {
          "method": "chrome.debugger.executeScript",
          "purpose": "Execute DELETE API call from authenticated context"
        }
      ],
      "networkRequests": [
        {
          "url": "https://claude.ai/api/organizations/{org_id}/chat_conversations/{conversation_id}",
          "method": "DELETE",
          "purpose": "Delete conversation via Claude.ai API",
          "body": "{\"uuid\": \"{conversation_id}\"}"
        }
      ]
    },
    "start_network_inspection": {
      "description": "Start monitoring network requests on a tab",
      "implementation": "chrome_debugger",
      "apiCalls": [
        {
          "method": "chrome.debugger.attach",
          "purpose": "Attach to tab for network monitoring"
        },
        {
          "method": "chrome.debugger.sendCommand",
          "command": "Network.enable",
          "purpose": "Enable network domain"
        }
      ],
      "networkRequests": []
    },
    "get_captured_requests": {
      "description": "Get captured network requests from monitoring",
      "implementation": "chrome_debugger",
      "apiCalls": [
        {
          "method": "internal_cache_read",
          "purpose": "Read from extension's network capture cache"
        }
      ],
      "networkRequests": []
    }
  },
  "architecturalPatterns": {
    "authenticationProxy": {
      "description": "Tools that need Claude.ai API access use existing browser session",
      "implementation": "Execute fetch() calls from authenticated tab context",
      "tools": [
        "get_claude_conversations",
        "search_claude_conversations", 
        "delete_claude_conversation"
      ]
    },
    "domAutomation": {
      "description": "Tools that simulate user interactions with Claude.ai UI",
      "implementation": "Chrome debugger API + script injection",
      "tools": [
        "send_message_to_claude_dot_ai_tab",
        "get_claude_dot_ai_response"
      ]
    },
    "tabManagement": {
      "description": "Tools that manage browser tabs",
      "implementation": "Chrome tabs API",
      "tools": [
        "spawn_claude_dot_ai_tab",
        "get_claude_dot_ai_tabs",
        "open_claude_dot_ai_conversation_tab"
      ]
    },
    "networkMonitoring": {
      "description": "Tools that monitor network traffic for API discovery",
      "implementation": "Chrome debugger Network domain",
      "tools": [
        "start_network_inspection",
        "stop_network_inspection",
        "get_captured_requests"
      ]
    }
  },
  "discoveredAPIs": {
    "conversationList": {
      "url": "/api/organizations/{org_id}/chat_conversations",
      "method": "GET",
      "params": "offset, limit",
      "usedBy": ["get_claude_conversations", "search_claude_conversations"]
    },
    "messageCompletion": {
      "url": "/api/organizations/{org_id}/chat_conversations/{conversation_id}/completion",
      "method": "POST",
      "contentType": "text/event-stream",
      "usedBy": ["send_message_to_claude_dot_ai_tab"]
    },
    "messageWarning": {
      "url": "/api/organizations/{org_id}/chat_conversations/{conversation_id}/chat_message_warning",
      "method": "POST",
      "usedBy": ["send_message_to_claude_dot_ai_tab"]
    },
    "conversationDelete": {
      "url": "/api/organizations/{org_id}/chat_conversations/{conversation_id}",
      "method": "DELETE",
      "usedBy": ["delete_claude_conversation"]
    },
    "conversationDetail": {
      "url": "/api/organizations/{org_id}/chat_conversations/{conversation_id}",
      "method": "GET",
      "params": "tree=True, rendering_mode=messages, render_all_tools=true",
      "usedBy": ["implicit via page loads"]
    },
    "organizationInfo": {
      "url": "/api/organizations/{org_id}",
      "method": "GET",
      "usedBy": ["implicit via page loads"]
    }
  },
  "securityConsiderations": {
    "sessionReuse": "Tools reuse existing browser authentication session",
    "corsPolicy": "API calls executed from same-origin context (claude.ai)",
    "permissions": "Extension requires debugger and tabs permissions",
    "dataExposure": "Tools can access full conversation history and API responses"
  },
  "performanceInsights": {
    "averageResponseTime": "~200ms for API calls",
    "cachingStrategy": "Client-side caching for conversation lists",
    "rateLimiting": "No explicit rate limiting observed",
    "networkOptimization": "Zstandard compression, CloudFlare CDN"
  }
}